<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAE0AAABLCAYAAAA1UAqtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAA7NJREFUeF7tm+tL1EEUhu1CSImFlXQRERUruyAmFVqSJiEpXaxESkoyFpMCQ8KS
        lKSLwVKUaCVCRdHFyCwEiUSJ6EIJEUQQQkQXKgih/+CNbRtjj+OsZ9AVO/PAfNj9tg8v785v5vzC4GAT
        Rr9wBMdJs8BJs8BJs8BJs8BJs8BJs8BJs8BJs8BJs4Al7Vd5BPrLpuOnJwo/9s7Gtz1z8bUkBp92xeFj
        cQI+7EhCX1Ey3hcuxbttKXhbkIY3m1fi9cZ09OZn4uWGLLzIzcHT9bl4kpOHx9mb0L22AF2Z2/FwdRE6
        04vRsWo3Hqwoxb00D9pSy3En5QBuLavAjSWVuJ5chasLq3E5qQYtiXVojj+Bi3H1aIz1oiHmLM7Na8CZ
        OU3wRl/C6VktOBV1BcdnXENd5E3URrTi6NQ2VIffR9WUDhya3InKiY9QEdZNf2ZQWNL6yyIDhH0picFn
        JWznAvQVLdIIy0Bv/hq8ysvC89wcPAsQtgVdmYV+YRmDhbWm7MdtJWyxElaLlsRjaI4/iQtx9WiK9eK8
        T9h8n7BGeKObtcJqprXhSHg7DhNhoy4tFAlrT/Pgbuq+PwkbEDaQMJ+wkUtYSKT5hH0v9SdsQBhN2Faa
        sOzAhK1TCfsrjCZseZCEJfgT5hOmTdjMIAmbFCjs4IQe+jODwpI2mgkLZYfRxYUl7X/pMP/qCY200UjY
        WHQYXVxY0rQJG4cdRj9zYUkbyYSNZYfRxYUlbTgdJgGWtMHCBidMAixpw+kwCbCkmRKmOkwCLGm6DqP7
        MAmwpJkSpv4lJcCSpuswug+TAEuaKWFqHyYBljRdh9FnSQmwpJkSpnb6EmBJ03UYfZaUAEuaKWHqWVIC
        LGm6DqPnYRJgSdMljJ6HSYAlTZswch4mAZY0XYfR8zAJsKRRYboTVwmwpOk6jJ7pS4AlTddh9ExfAixp
        ug6jZ/oSYEkzJUzdS0qAJU3XYfTWSAIsadqEkXtJCbCk6TqM3ktKgCVN12F0tkICLGm6DqM33xJgSdN1
        GJ2tkABLmilharZCAixpug6j82ESYEkzJUxN70iAJU2bMDIfJgGWNFPC1HyYBFjSdB1GJxAlwJJmSpia
        QJQAS5quw+iMqwRY0kwJUzOuEmBJMyXM9uWs8QhLmilhtpPS4xGWNG3CyJy+BFjSTAlz0oZA12H/lv9N
        EAmwpJkS5pI2BLoOo+8aSYAlzZQwJ20IAgUFJsx1msOIk2aBk2aBk2aBk2aBk2aBk2aBk2aBk2aBk2bB
        b7015MTF//HQAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="ID.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Parameter.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Value.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>